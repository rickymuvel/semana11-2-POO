'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.34209
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="Negocios2015")>  _
Partial Public Class Negocios2015DataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Definiciones de métodos de extensibilidad"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub Insertclientes(instance As clientes)
    End Sub
  Partial Private Sub Updateclientes(instance As clientes)
    End Sub
  Partial Private Sub Deleteclientes(instance As clientes)
    End Sub
  Partial Private Sub Insertpedidoscabe(instance As pedidoscabe)
    End Sub
  Partial Private Sub Updatepedidoscabe(instance As pedidoscabe)
    End Sub
  Partial Private Sub Deletepedidoscabe(instance As pedidoscabe)
    End Sub
  Partial Private Sub Insertproductos(instance As productos)
    End Sub
  Partial Private Sub Updateproductos(instance As productos)
    End Sub
  Partial Private Sub Deleteproductos(instance As productos)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.APP_LINQ1.My.MySettings.Default.Negocios2015ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property clientes() As System.Data.Linq.Table(Of clientes)
		Get
			Return Me.GetTable(Of clientes)
		End Get
	End Property
	
	Public ReadOnly Property pedidoscabe() As System.Data.Linq.Table(Of pedidoscabe)
		Get
			Return Me.GetTable(Of pedidoscabe)
		End Get
	End Property
	
	Public ReadOnly Property pedidosdeta() As System.Data.Linq.Table(Of pedidosdeta)
		Get
			Return Me.GetTable(Of pedidosdeta)
		End Get
	End Property
	
	Public ReadOnly Property productos() As System.Data.Linq.Table(Of productos)
		Get
			Return Me.GetTable(Of productos)
		End Get
	End Property
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.usp_PedidosCliente_LINQ")>  _
	Public Function usp_PedidosCliente_LINQ(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdCliente", DbType:="VarChar(5)")> ByVal idCliente As String) As ISingleResult(Of usp_PedidosCliente_LINQResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idCliente)
		Return CType(result.ReturnValue,ISingleResult(Of usp_PedidosCliente_LINQResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.usp_PedidosAño_LINQ")>  _
	Public Function usp_PedidosAño_LINQ(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Año", DbType:="Int")> ByVal año As System.Nullable(Of Integer)) As ISingleResult(Of usp_PedidosAño_LINQResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), año)
		Return CType(result.ReturnValue,ISingleResult(Of usp_PedidosAño_LINQResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.usp_PedidosFecha_LINQ")>  _
	Public Function usp_PedidosFecha_LINQ(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal fec1 As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal fec2 As System.Nullable(Of Date)) As ISingleResult(Of usp_PedidosFecha_LINQResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), fec1, fec2)
		Return CType(result.ReturnValue,ISingleResult(Of usp_PedidosFecha_LINQResult))
	End Function
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="Ventas.clientes")>  _
Partial Public Class clientes
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdCliente As String
	
	Private _NomCliente As String
	
	Private _DirCliente As String
	
	Private _idpais As String
	
	Private _fonoCliente As String
	
	Private _Activo As System.Nullable(Of Boolean)
	
	Private _pedidoscabe As EntitySet(Of pedidoscabe)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdClienteChanging(value As String)
    End Sub
    Partial Private Sub OnIdClienteChanged()
    End Sub
    Partial Private Sub OnNomClienteChanging(value As String)
    End Sub
    Partial Private Sub OnNomClienteChanged()
    End Sub
    Partial Private Sub OnDirClienteChanging(value As String)
    End Sub
    Partial Private Sub OnDirClienteChanged()
    End Sub
    Partial Private Sub OnidpaisChanging(value As String)
    End Sub
    Partial Private Sub OnidpaisChanged()
    End Sub
    Partial Private Sub OnfonoClienteChanging(value As String)
    End Sub
    Partial Private Sub OnfonoClienteChanged()
    End Sub
    Partial Private Sub OnActivoChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnActivoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._pedidoscabe = New EntitySet(Of pedidoscabe)(AddressOf Me.attach_pedidoscabe, AddressOf Me.detach_pedidoscabe)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdCliente", DbType:="VarChar(5) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property IdCliente() As String
		Get
			Return Me._IdCliente
		End Get
		Set
			If (String.Equals(Me._IdCliente, value) = false) Then
				Me.OnIdClienteChanging(value)
				Me.SendPropertyChanging
				Me._IdCliente = value
				Me.SendPropertyChanged("IdCliente")
				Me.OnIdClienteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NomCliente", DbType:="VarChar(40) NOT NULL", CanBeNull:=false)>  _
	Public Property NomCliente() As String
		Get
			Return Me._NomCliente
		End Get
		Set
			If (String.Equals(Me._NomCliente, value) = false) Then
				Me.OnNomClienteChanging(value)
				Me.SendPropertyChanging
				Me._NomCliente = value
				Me.SendPropertyChanged("NomCliente")
				Me.OnNomClienteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DirCliente", DbType:="VarChar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property DirCliente() As String
		Get
			Return Me._DirCliente
		End Get
		Set
			If (String.Equals(Me._DirCliente, value) = false) Then
				Me.OnDirClienteChanging(value)
				Me.SendPropertyChanging
				Me._DirCliente = value
				Me.SendPropertyChanged("DirCliente")
				Me.OnDirClienteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idpais", DbType:="Char(3)")>  _
	Public Property idpais() As String
		Get
			Return Me._idpais
		End Get
		Set
			If (String.Equals(Me._idpais, value) = false) Then
				Me.OnidpaisChanging(value)
				Me.SendPropertyChanging
				Me._idpais = value
				Me.SendPropertyChanged("idpais")
				Me.OnidpaisChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fonoCliente", DbType:="VarChar(25) NOT NULL", CanBeNull:=false)>  _
	Public Property fonoCliente() As String
		Get
			Return Me._fonoCliente
		End Get
		Set
			If (String.Equals(Me._fonoCliente, value) = false) Then
				Me.OnfonoClienteChanging(value)
				Me.SendPropertyChanging
				Me._fonoCliente = value
				Me.SendPropertyChanged("fonoCliente")
				Me.OnfonoClienteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Activo", DbType:="Bit")>  _
	Public Property Activo() As System.Nullable(Of Boolean)
		Get
			Return Me._Activo
		End Get
		Set
			If (Me._Activo.Equals(value) = false) Then
				Me.OnActivoChanging(value)
				Me.SendPropertyChanging
				Me._Activo = value
				Me.SendPropertyChanged("Activo")
				Me.OnActivoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="clientes_pedidoscabe", Storage:="_pedidoscabe", ThisKey:="IdCliente", OtherKey:="IdCliente")>  _
	Public Property pedidoscabe() As EntitySet(Of pedidoscabe)
		Get
			Return Me._pedidoscabe
		End Get
		Set
			Me._pedidoscabe.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_pedidoscabe(ByVal entity As pedidoscabe)
		Me.SendPropertyChanging
		entity.clientes = Me
	End Sub
	
	Private Sub detach_pedidoscabe(ByVal entity As pedidoscabe)
		Me.SendPropertyChanging
		entity.clientes = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="Ventas.pedidoscabe")>  _
Partial Public Class pedidoscabe
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdPedido As Integer
	
	Private _IdCliente As String
	
	Private _IdEmpleado As System.Nullable(Of Integer)
	
	Private _FechaPedido As Date
	
	Private _FechaEntrega As System.Nullable(Of Date)
	
	Private _FechaEnvio As System.Nullable(Of Date)
	
	Private _EnvioPedido As System.Nullable(Of Char)
	
	Private _CantidaPedido As System.Nullable(Of Integer)
	
	Private _Destinatario As String
	
	Private _DirDestinatario As String
	
	Private _CiuDestinatario As String
	
	Private _RefDestnatario As String
	
	Private _DepDestinatario As String
	
	Private _PaiDestinatario As String
	
	Private _clientes As EntityRef(Of clientes)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdPedidoChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdPedidoChanged()
    End Sub
    Partial Private Sub OnIdClienteChanging(value As String)
    End Sub
    Partial Private Sub OnIdClienteChanged()
    End Sub
    Partial Private Sub OnIdEmpleadoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdEmpleadoChanged()
    End Sub
    Partial Private Sub OnFechaPedidoChanging(value As Date)
    End Sub
    Partial Private Sub OnFechaPedidoChanged()
    End Sub
    Partial Private Sub OnFechaEntregaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFechaEntregaChanged()
    End Sub
    Partial Private Sub OnFechaEnvioChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFechaEnvioChanged()
    End Sub
    Partial Private Sub OnEnvioPedidoChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnEnvioPedidoChanged()
    End Sub
    Partial Private Sub OnCantidaPedidoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCantidaPedidoChanged()
    End Sub
    Partial Private Sub OnDestinatarioChanging(value As String)
    End Sub
    Partial Private Sub OnDestinatarioChanged()
    End Sub
    Partial Private Sub OnDirDestinatarioChanging(value As String)
    End Sub
    Partial Private Sub OnDirDestinatarioChanged()
    End Sub
    Partial Private Sub OnCiuDestinatarioChanging(value As String)
    End Sub
    Partial Private Sub OnCiuDestinatarioChanged()
    End Sub
    Partial Private Sub OnRefDestnatarioChanging(value As String)
    End Sub
    Partial Private Sub OnRefDestnatarioChanged()
    End Sub
    Partial Private Sub OnDepDestinatarioChanging(value As String)
    End Sub
    Partial Private Sub OnDepDestinatarioChanged()
    End Sub
    Partial Private Sub OnPaiDestinatarioChanging(value As String)
    End Sub
    Partial Private Sub OnPaiDestinatarioChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._clientes = CType(Nothing, EntityRef(Of clientes))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdPedido", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property IdPedido() As Integer
		Get
			Return Me._IdPedido
		End Get
		Set
			If ((Me._IdPedido = value)  _
						= false) Then
				Me.OnIdPedidoChanging(value)
				Me.SendPropertyChanging
				Me._IdPedido = value
				Me.SendPropertyChanged("IdPedido")
				Me.OnIdPedidoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdCliente", DbType:="VarChar(5)")>  _
	Public Property IdCliente() As String
		Get
			Return Me._IdCliente
		End Get
		Set
			If (String.Equals(Me._IdCliente, value) = false) Then
				If Me._clientes.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnIdClienteChanging(value)
				Me.SendPropertyChanging
				Me._IdCliente = value
				Me.SendPropertyChanged("IdCliente")
				Me.OnIdClienteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdEmpleado", DbType:="Int")>  _
	Public Property IdEmpleado() As System.Nullable(Of Integer)
		Get
			Return Me._IdEmpleado
		End Get
		Set
			If (Me._IdEmpleado.Equals(value) = false) Then
				Me.OnIdEmpleadoChanging(value)
				Me.SendPropertyChanging
				Me._IdEmpleado = value
				Me.SendPropertyChanged("IdEmpleado")
				Me.OnIdEmpleadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FechaPedido", DbType:="DateTime NOT NULL")>  _
	Public Property FechaPedido() As Date
		Get
			Return Me._FechaPedido
		End Get
		Set
			If ((Me._FechaPedido = value)  _
						= false) Then
				Me.OnFechaPedidoChanging(value)
				Me.SendPropertyChanging
				Me._FechaPedido = value
				Me.SendPropertyChanged("FechaPedido")
				Me.OnFechaPedidoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FechaEntrega", DbType:="DateTime")>  _
	Public Property FechaEntrega() As System.Nullable(Of Date)
		Get
			Return Me._FechaEntrega
		End Get
		Set
			If (Me._FechaEntrega.Equals(value) = false) Then
				Me.OnFechaEntregaChanging(value)
				Me.SendPropertyChanging
				Me._FechaEntrega = value
				Me.SendPropertyChanged("FechaEntrega")
				Me.OnFechaEntregaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FechaEnvio", DbType:="DateTime")>  _
	Public Property FechaEnvio() As System.Nullable(Of Date)
		Get
			Return Me._FechaEnvio
		End Get
		Set
			If (Me._FechaEnvio.Equals(value) = false) Then
				Me.OnFechaEnvioChanging(value)
				Me.SendPropertyChanging
				Me._FechaEnvio = value
				Me.SendPropertyChanged("FechaEnvio")
				Me.OnFechaEnvioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EnvioPedido", DbType:="Char(1)")>  _
	Public Property EnvioPedido() As System.Nullable(Of Char)
		Get
			Return Me._EnvioPedido
		End Get
		Set
			If (Me._EnvioPedido.Equals(value) = false) Then
				Me.OnEnvioPedidoChanging(value)
				Me.SendPropertyChanging
				Me._EnvioPedido = value
				Me.SendPropertyChanged("EnvioPedido")
				Me.OnEnvioPedidoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CantidaPedido", DbType:="Int")>  _
	Public Property CantidaPedido() As System.Nullable(Of Integer)
		Get
			Return Me._CantidaPedido
		End Get
		Set
			If (Me._CantidaPedido.Equals(value) = false) Then
				Me.OnCantidaPedidoChanging(value)
				Me.SendPropertyChanging
				Me._CantidaPedido = value
				Me.SendPropertyChanged("CantidaPedido")
				Me.OnCantidaPedidoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Destinatario", DbType:="VarChar(40)")>  _
	Public Property Destinatario() As String
		Get
			Return Me._Destinatario
		End Get
		Set
			If (String.Equals(Me._Destinatario, value) = false) Then
				Me.OnDestinatarioChanging(value)
				Me.SendPropertyChanging
				Me._Destinatario = value
				Me.SendPropertyChanged("Destinatario")
				Me.OnDestinatarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DirDestinatario", DbType:="VarChar(60)")>  _
	Public Property DirDestinatario() As String
		Get
			Return Me._DirDestinatario
		End Get
		Set
			If (String.Equals(Me._DirDestinatario, value) = false) Then
				Me.OnDirDestinatarioChanging(value)
				Me.SendPropertyChanging
				Me._DirDestinatario = value
				Me.SendPropertyChanged("DirDestinatario")
				Me.OnDirDestinatarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CiuDestinatario", DbType:="VarChar(60)")>  _
	Public Property CiuDestinatario() As String
		Get
			Return Me._CiuDestinatario
		End Get
		Set
			If (String.Equals(Me._CiuDestinatario, value) = false) Then
				Me.OnCiuDestinatarioChanging(value)
				Me.SendPropertyChanging
				Me._CiuDestinatario = value
				Me.SendPropertyChanged("CiuDestinatario")
				Me.OnCiuDestinatarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RefDestnatario", DbType:="VarChar(60)")>  _
	Public Property RefDestnatario() As String
		Get
			Return Me._RefDestnatario
		End Get
		Set
			If (String.Equals(Me._RefDestnatario, value) = false) Then
				Me.OnRefDestnatarioChanging(value)
				Me.SendPropertyChanging
				Me._RefDestnatario = value
				Me.SendPropertyChanged("RefDestnatario")
				Me.OnRefDestnatarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DepDestinatario", DbType:="VarChar(60)")>  _
	Public Property DepDestinatario() As String
		Get
			Return Me._DepDestinatario
		End Get
		Set
			If (String.Equals(Me._DepDestinatario, value) = false) Then
				Me.OnDepDestinatarioChanging(value)
				Me.SendPropertyChanging
				Me._DepDestinatario = value
				Me.SendPropertyChanged("DepDestinatario")
				Me.OnDepDestinatarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PaiDestinatario", DbType:="VarChar(60)")>  _
	Public Property PaiDestinatario() As String
		Get
			Return Me._PaiDestinatario
		End Get
		Set
			If (String.Equals(Me._PaiDestinatario, value) = false) Then
				Me.OnPaiDestinatarioChanging(value)
				Me.SendPropertyChanging
				Me._PaiDestinatario = value
				Me.SendPropertyChanged("PaiDestinatario")
				Me.OnPaiDestinatarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="clientes_pedidoscabe", Storage:="_clientes", ThisKey:="IdCliente", OtherKey:="IdCliente", IsForeignKey:=true)>  _
	Public Property clientes() As clientes
		Get
			Return Me._clientes.Entity
		End Get
		Set
			Dim previousValue As clientes = Me._clientes.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._clientes.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._clientes.Entity = Nothing
					previousValue.pedidoscabe.Remove(Me)
				End If
				Me._clientes.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.pedidoscabe.Add(Me)
					Me._IdCliente = value.IdCliente
				Else
					Me._IdCliente = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("clientes")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="Ventas.pedidosdeta")>  _
Partial Public Class pedidosdeta
	
	Private _IdPedido As System.Nullable(Of Integer)
	
	Private _IdProducto As System.Nullable(Of Integer)
	
	Private _PrecioUnidad As Decimal
	
	Private _Cantidad As Short
	
	Private _Descuento As Double
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdPedido", DbType:="Int")>  _
	Public Property IdPedido() As System.Nullable(Of Integer)
		Get
			Return Me._IdPedido
		End Get
		Set
			If (Me._IdPedido.Equals(value) = false) Then
				Me._IdPedido = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdProducto", DbType:="Int")>  _
	Public Property IdProducto() As System.Nullable(Of Integer)
		Get
			Return Me._IdProducto
		End Get
		Set
			If (Me._IdProducto.Equals(value) = false) Then
				Me._IdProducto = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PrecioUnidad", DbType:="Decimal(10,0) NOT NULL")>  _
	Public Property PrecioUnidad() As Decimal
		Get
			Return Me._PrecioUnidad
		End Get
		Set
			If ((Me._PrecioUnidad = value)  _
						= false) Then
				Me._PrecioUnidad = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cantidad", DbType:="SmallInt NOT NULL")>  _
	Public Property Cantidad() As Short
		Get
			Return Me._Cantidad
		End Get
		Set
			If ((Me._Cantidad = value)  _
						= false) Then
				Me._Cantidad = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descuento", DbType:="Float NOT NULL")>  _
	Public Property Descuento() As Double
		Get
			Return Me._Descuento
		End Get
		Set
			If ((Me._Descuento = value)  _
						= false) Then
				Me._Descuento = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="Compras.productos")>  _
Partial Public Class productos
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdProducto As Integer
	
	Private _NomProducto As String
	
	Private _IdProveedor As System.Nullable(Of Integer)
	
	Private _IdCategoria As System.Nullable(Of Integer)
	
	Private _CantxUnidad As String
	
	Private _PrecioUnidad As Decimal
	
	Private _UnidadesEnExistencia As Short
	
	Private _UnidadesEnPedido As Short
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdProductoChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdProductoChanged()
    End Sub
    Partial Private Sub OnNomProductoChanging(value As String)
    End Sub
    Partial Private Sub OnNomProductoChanged()
    End Sub
    Partial Private Sub OnIdProveedorChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdProveedorChanged()
    End Sub
    Partial Private Sub OnIdCategoriaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdCategoriaChanged()
    End Sub
    Partial Private Sub OnCantxUnidadChanging(value As String)
    End Sub
    Partial Private Sub OnCantxUnidadChanged()
    End Sub
    Partial Private Sub OnPrecioUnidadChanging(value As Decimal)
    End Sub
    Partial Private Sub OnPrecioUnidadChanged()
    End Sub
    Partial Private Sub OnUnidadesEnExistenciaChanging(value As Short)
    End Sub
    Partial Private Sub OnUnidadesEnExistenciaChanged()
    End Sub
    Partial Private Sub OnUnidadesEnPedidoChanging(value As Short)
    End Sub
    Partial Private Sub OnUnidadesEnPedidoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdProducto", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property IdProducto() As Integer
		Get
			Return Me._IdProducto
		End Get
		Set
			If ((Me._IdProducto = value)  _
						= false) Then
				Me.OnIdProductoChanging(value)
				Me.SendPropertyChanging
				Me._IdProducto = value
				Me.SendPropertyChanged("IdProducto")
				Me.OnIdProductoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NomProducto", DbType:="VarChar(40) NOT NULL", CanBeNull:=false)>  _
	Public Property NomProducto() As String
		Get
			Return Me._NomProducto
		End Get
		Set
			If (String.Equals(Me._NomProducto, value) = false) Then
				Me.OnNomProductoChanging(value)
				Me.SendPropertyChanging
				Me._NomProducto = value
				Me.SendPropertyChanged("NomProducto")
				Me.OnNomProductoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdProveedor", DbType:="Int")>  _
	Public Property IdProveedor() As System.Nullable(Of Integer)
		Get
			Return Me._IdProveedor
		End Get
		Set
			If (Me._IdProveedor.Equals(value) = false) Then
				Me.OnIdProveedorChanging(value)
				Me.SendPropertyChanging
				Me._IdProveedor = value
				Me.SendPropertyChanged("IdProveedor")
				Me.OnIdProveedorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdCategoria", DbType:="Int")>  _
	Public Property IdCategoria() As System.Nullable(Of Integer)
		Get
			Return Me._IdCategoria
		End Get
		Set
			If (Me._IdCategoria.Equals(value) = false) Then
				Me.OnIdCategoriaChanging(value)
				Me.SendPropertyChanging
				Me._IdCategoria = value
				Me.SendPropertyChanged("IdCategoria")
				Me.OnIdCategoriaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CantxUnidad", DbType:="VarChar(20) NOT NULL", CanBeNull:=false)>  _
	Public Property CantxUnidad() As String
		Get
			Return Me._CantxUnidad
		End Get
		Set
			If (String.Equals(Me._CantxUnidad, value) = false) Then
				Me.OnCantxUnidadChanging(value)
				Me.SendPropertyChanging
				Me._CantxUnidad = value
				Me.SendPropertyChanged("CantxUnidad")
				Me.OnCantxUnidadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PrecioUnidad", DbType:="Decimal(10,0) NOT NULL")>  _
	Public Property PrecioUnidad() As Decimal
		Get
			Return Me._PrecioUnidad
		End Get
		Set
			If ((Me._PrecioUnidad = value)  _
						= false) Then
				Me.OnPrecioUnidadChanging(value)
				Me.SendPropertyChanging
				Me._PrecioUnidad = value
				Me.SendPropertyChanged("PrecioUnidad")
				Me.OnPrecioUnidadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UnidadesEnExistencia", DbType:="SmallInt NOT NULL")>  _
	Public Property UnidadesEnExistencia() As Short
		Get
			Return Me._UnidadesEnExistencia
		End Get
		Set
			If ((Me._UnidadesEnExistencia = value)  _
						= false) Then
				Me.OnUnidadesEnExistenciaChanging(value)
				Me.SendPropertyChanging
				Me._UnidadesEnExistencia = value
				Me.SendPropertyChanged("UnidadesEnExistencia")
				Me.OnUnidadesEnExistenciaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UnidadesEnPedido", DbType:="SmallInt NOT NULL")>  _
	Public Property UnidadesEnPedido() As Short
		Get
			Return Me._UnidadesEnPedido
		End Get
		Set
			If ((Me._UnidadesEnPedido = value)  _
						= false) Then
				Me.OnUnidadesEnPedidoChanging(value)
				Me.SendPropertyChanging
				Me._UnidadesEnPedido = value
				Me.SendPropertyChanged("UnidadesEnPedido")
				Me.OnUnidadesEnPedidoChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

Partial Public Class usp_PedidosCliente_LINQResult
	
	Private _IdPedido As Integer
	
	Private _IdCliente As String
	
	Private _IdEmpleado As System.Nullable(Of Integer)
	
	Private _FechaPedido As Date
	
	Private _FechaEntrega As System.Nullable(Of Date)
	
	Private _FechaEnvio As System.Nullable(Of Date)
	
	Private _EnvioPedido As System.Nullable(Of Char)
	
	Private _CantidaPedido As System.Nullable(Of Integer)
	
	Private _Destinatario As String
	
	Private _DirDestinatario As String
	
	Private _CiuDestinatario As String
	
	Private _RefDestnatario As String
	
	Private _DepDestinatario As String
	
	Private _PaiDestinatario As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdPedido", DbType:="Int NOT NULL")>  _
	Public Property IdPedido() As Integer
		Get
			Return Me._IdPedido
		End Get
		Set
			If ((Me._IdPedido = value)  _
						= false) Then
				Me._IdPedido = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdCliente", DbType:="VarChar(5)")>  _
	Public Property IdCliente() As String
		Get
			Return Me._IdCliente
		End Get
		Set
			If (String.Equals(Me._IdCliente, value) = false) Then
				Me._IdCliente = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdEmpleado", DbType:="Int")>  _
	Public Property IdEmpleado() As System.Nullable(Of Integer)
		Get
			Return Me._IdEmpleado
		End Get
		Set
			If (Me._IdEmpleado.Equals(value) = false) Then
				Me._IdEmpleado = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FechaPedido", DbType:="DateTime NOT NULL")>  _
	Public Property FechaPedido() As Date
		Get
			Return Me._FechaPedido
		End Get
		Set
			If ((Me._FechaPedido = value)  _
						= false) Then
				Me._FechaPedido = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FechaEntrega", DbType:="DateTime")>  _
	Public Property FechaEntrega() As System.Nullable(Of Date)
		Get
			Return Me._FechaEntrega
		End Get
		Set
			If (Me._FechaEntrega.Equals(value) = false) Then
				Me._FechaEntrega = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FechaEnvio", DbType:="DateTime")>  _
	Public Property FechaEnvio() As System.Nullable(Of Date)
		Get
			Return Me._FechaEnvio
		End Get
		Set
			If (Me._FechaEnvio.Equals(value) = false) Then
				Me._FechaEnvio = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EnvioPedido", DbType:="Char(1)")>  _
	Public Property EnvioPedido() As System.Nullable(Of Char)
		Get
			Return Me._EnvioPedido
		End Get
		Set
			If (Me._EnvioPedido.Equals(value) = false) Then
				Me._EnvioPedido = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CantidaPedido", DbType:="Int")>  _
	Public Property CantidaPedido() As System.Nullable(Of Integer)
		Get
			Return Me._CantidaPedido
		End Get
		Set
			If (Me._CantidaPedido.Equals(value) = false) Then
				Me._CantidaPedido = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Destinatario", DbType:="VarChar(40)")>  _
	Public Property Destinatario() As String
		Get
			Return Me._Destinatario
		End Get
		Set
			If (String.Equals(Me._Destinatario, value) = false) Then
				Me._Destinatario = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DirDestinatario", DbType:="VarChar(60)")>  _
	Public Property DirDestinatario() As String
		Get
			Return Me._DirDestinatario
		End Get
		Set
			If (String.Equals(Me._DirDestinatario, value) = false) Then
				Me._DirDestinatario = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CiuDestinatario", DbType:="VarChar(60)")>  _
	Public Property CiuDestinatario() As String
		Get
			Return Me._CiuDestinatario
		End Get
		Set
			If (String.Equals(Me._CiuDestinatario, value) = false) Then
				Me._CiuDestinatario = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RefDestnatario", DbType:="VarChar(60)")>  _
	Public Property RefDestnatario() As String
		Get
			Return Me._RefDestnatario
		End Get
		Set
			If (String.Equals(Me._RefDestnatario, value) = false) Then
				Me._RefDestnatario = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DepDestinatario", DbType:="VarChar(60)")>  _
	Public Property DepDestinatario() As String
		Get
			Return Me._DepDestinatario
		End Get
		Set
			If (String.Equals(Me._DepDestinatario, value) = false) Then
				Me._DepDestinatario = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PaiDestinatario", DbType:="VarChar(60)")>  _
	Public Property PaiDestinatario() As String
		Get
			Return Me._PaiDestinatario
		End Get
		Set
			If (String.Equals(Me._PaiDestinatario, value) = false) Then
				Me._PaiDestinatario = value
			End If
		End Set
	End Property
End Class

Partial Public Class usp_PedidosAño_LINQResult
	
	Private _IdPedido As Integer
	
	Private _IdCliente As String
	
	Private _IdEmpleado As System.Nullable(Of Integer)
	
	Private _FechaPedido As Date
	
	Private _FechaEntrega As System.Nullable(Of Date)
	
	Private _FechaEnvio As System.Nullable(Of Date)
	
	Private _EnvioPedido As System.Nullable(Of Char)
	
	Private _CantidaPedido As System.Nullable(Of Integer)
	
	Private _Destinatario As String
	
	Private _DirDestinatario As String
	
	Private _CiuDestinatario As String
	
	Private _RefDestnatario As String
	
	Private _DepDestinatario As String
	
	Private _PaiDestinatario As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdPedido", DbType:="Int NOT NULL")>  _
	Public Property IdPedido() As Integer
		Get
			Return Me._IdPedido
		End Get
		Set
			If ((Me._IdPedido = value)  _
						= false) Then
				Me._IdPedido = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdCliente", DbType:="VarChar(5)")>  _
	Public Property IdCliente() As String
		Get
			Return Me._IdCliente
		End Get
		Set
			If (String.Equals(Me._IdCliente, value) = false) Then
				Me._IdCliente = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdEmpleado", DbType:="Int")>  _
	Public Property IdEmpleado() As System.Nullable(Of Integer)
		Get
			Return Me._IdEmpleado
		End Get
		Set
			If (Me._IdEmpleado.Equals(value) = false) Then
				Me._IdEmpleado = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FechaPedido", DbType:="DateTime NOT NULL")>  _
	Public Property FechaPedido() As Date
		Get
			Return Me._FechaPedido
		End Get
		Set
			If ((Me._FechaPedido = value)  _
						= false) Then
				Me._FechaPedido = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FechaEntrega", DbType:="DateTime")>  _
	Public Property FechaEntrega() As System.Nullable(Of Date)
		Get
			Return Me._FechaEntrega
		End Get
		Set
			If (Me._FechaEntrega.Equals(value) = false) Then
				Me._FechaEntrega = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FechaEnvio", DbType:="DateTime")>  _
	Public Property FechaEnvio() As System.Nullable(Of Date)
		Get
			Return Me._FechaEnvio
		End Get
		Set
			If (Me._FechaEnvio.Equals(value) = false) Then
				Me._FechaEnvio = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EnvioPedido", DbType:="Char(1)")>  _
	Public Property EnvioPedido() As System.Nullable(Of Char)
		Get
			Return Me._EnvioPedido
		End Get
		Set
			If (Me._EnvioPedido.Equals(value) = false) Then
				Me._EnvioPedido = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CantidaPedido", DbType:="Int")>  _
	Public Property CantidaPedido() As System.Nullable(Of Integer)
		Get
			Return Me._CantidaPedido
		End Get
		Set
			If (Me._CantidaPedido.Equals(value) = false) Then
				Me._CantidaPedido = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Destinatario", DbType:="VarChar(40)")>  _
	Public Property Destinatario() As String
		Get
			Return Me._Destinatario
		End Get
		Set
			If (String.Equals(Me._Destinatario, value) = false) Then
				Me._Destinatario = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DirDestinatario", DbType:="VarChar(60)")>  _
	Public Property DirDestinatario() As String
		Get
			Return Me._DirDestinatario
		End Get
		Set
			If (String.Equals(Me._DirDestinatario, value) = false) Then
				Me._DirDestinatario = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CiuDestinatario", DbType:="VarChar(60)")>  _
	Public Property CiuDestinatario() As String
		Get
			Return Me._CiuDestinatario
		End Get
		Set
			If (String.Equals(Me._CiuDestinatario, value) = false) Then
				Me._CiuDestinatario = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RefDestnatario", DbType:="VarChar(60)")>  _
	Public Property RefDestnatario() As String
		Get
			Return Me._RefDestnatario
		End Get
		Set
			If (String.Equals(Me._RefDestnatario, value) = false) Then
				Me._RefDestnatario = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DepDestinatario", DbType:="VarChar(60)")>  _
	Public Property DepDestinatario() As String
		Get
			Return Me._DepDestinatario
		End Get
		Set
			If (String.Equals(Me._DepDestinatario, value) = false) Then
				Me._DepDestinatario = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PaiDestinatario", DbType:="VarChar(60)")>  _
	Public Property PaiDestinatario() As String
		Get
			Return Me._PaiDestinatario
		End Get
		Set
			If (String.Equals(Me._PaiDestinatario, value) = false) Then
				Me._PaiDestinatario = value
			End If
		End Set
	End Property
End Class

Partial Public Class usp_PedidosFecha_LINQResult
	
	Private _IdPedido As Integer
	
	Private _FechaPedido As Date
	
	Private _Destinatario As String
	
	Private _DirDestinatario As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdPedido", DbType:="Int NOT NULL")>  _
	Public Property IdPedido() As Integer
		Get
			Return Me._IdPedido
		End Get
		Set
			If ((Me._IdPedido = value)  _
						= false) Then
				Me._IdPedido = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FechaPedido", DbType:="DateTime NOT NULL")>  _
	Public Property FechaPedido() As Date
		Get
			Return Me._FechaPedido
		End Get
		Set
			If ((Me._FechaPedido = value)  _
						= false) Then
				Me._FechaPedido = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Destinatario", DbType:="VarChar(40)")>  _
	Public Property Destinatario() As String
		Get
			Return Me._Destinatario
		End Get
		Set
			If (String.Equals(Me._Destinatario, value) = false) Then
				Me._Destinatario = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DirDestinatario", DbType:="VarChar(60)")>  _
	Public Property DirDestinatario() As String
		Get
			Return Me._DirDestinatario
		End Get
		Set
			If (String.Equals(Me._DirDestinatario, value) = false) Then
				Me._DirDestinatario = value
			End If
		End Set
	End Property
End Class
